features <- read.table("./data/features.txt") #features/ col names
trainsub <- read.table("./data/subject_train.txt", col.names = "subject") #7352x1
trainX <- read.table("./data/X_train.txt", col.names = features[,2]) #7352x561
trainy <- read.table("./data/y_train.txt", col.names = "activity") #7352x1
testsub <- read.table("./data/subject_test.txt", col.names = "subject") #range 1:30
testX <- read.table("./data/X_test.txt", col.names = features[,2]) #2947x561 variables/features
testy <- read.table("./data/y_test.txt", col.names = "activity") #2947x1
#combine sets
trainset <- cbind(trainsub, trainX, trainy)
testset <- cbind(testsub, testX, testy)
data <- rbind(trainset, testset) #10299x563
rm("testsub", "testX", "testy", "trainsub", "trainX", "trainy", "testset", "trainset")
# 2. Extracts only the measurements on the mean and standard deviation for each
# measurement.
data <- data[ , grepl("subject|.mean.|.std.|activity" , names(data))]
# 3. Uses descriptive activity names to name the activities in the data set
# 1 WALKING, 2 WALKING_UPSTAIRS, 3 WALKING_DOWNSTAIRS, 4 SITTING, 5 STANDING,
# 6 LAYING
data$activity <- factor(data$activity, levels = 1:6, labels = c("walking",
"walking_upstairs", "walking_downstairs", "sitting", "standing", "laying"))
# 4. Appropriately labels the data set with descriptive variable names.
#applied features to col.names in step 1
# 5. From the data set in step 4, creates a second, independent tidy data set with
# the average of each variable for each activity and each subject.
library(data.table)
datamelt <- melt(data, id=c("subject","activity"))
datatidy <- dcast(datamelt, subject + activity ~ variable, mean)
write.table(datatidy, "datatidy.txt", row.names=FALSE) #crate text file
View(datatidy)
